
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-nginx
  namespace: expense-ns
data: 
  nginx.conf: |

    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;

        server {
            listen       80 default_server;
            listen       [::]:80 default_server;
            server_name  _;
            root         /usr/share/nginx/html;

            # Load configuration files for the default server block.
            include /etc/nginx/default.d/*.conf;

          location /api/ {
              proxy_pass http://backend:8080/;
          }
          
            error_page 404 /404.html;
                location = /40x.html {
            }

            error_page 500 502 503 504 /50x.html;
                location = /50x.html {
            }
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense-ns
  labels:
    app: exepnse
    tier: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: exepnse
      tier: web
  template:
    metadata:
      labels:
        app: exepnse
        tier: web
    spec:
      containers:
      - name: frontend
        image: labhavya/frontend:1.3.0    # got this from DockerRepo/fronend
        volumeMounts:
        - name: config-vol
          mountPath: /etc/nginx/nginx.conf
        resources:
    #soft limits
          requests: 
            memory: "50Mi"
            cpu: "100m"
          limits:
            memory: "100Mi"
            cpu: "150m"

        ports:
        - containerPort: 8080 #service port
      volumes:
      - name: config-vol
        configMap:
          name: configmap-nginx
          items:
            - key: nginx.conf
              path: nginx.conf
---

#scaling policy
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: scaling-pol1
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 5

---
#service to make frontend accessible from internet using load balancer

apiVersion: v1
kind: Service

metadata:
  name: frontend
  namespace: expense-ns
spec:
  type: LoadBalancer
  selector:
    app: exepnse
    tier: web
  ports:
  - name: frontend
    port: 80 #service port, used to acces the website
    targetPort: 8080  # target container port